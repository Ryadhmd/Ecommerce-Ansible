---
- name: Installing FirewallD
  hosts: all
  become: yes
  tasks:
      - name: Installing firewalld 
        apt:
          name: firewalld
          state: "present"
          update_cache: true
      - name: Starting the service
        service: 
          name: firewalld
          state: started
          enabled: yes 

- name: Installing and starting MariaDB
  hosts: dbserver
  become: yes 
  vars: 
    packages:
      - mariadb-server
      - python3-pip
      - libmysqlclient-dev   
      
  # mysqlclient depends on libmysqlclient-dev and Mariadb needs mysqlclient in order to work 
  tasks:
    - name: Installing MariaDB and Pre-Requisites
      package:
        name: '{{ item }}'
        state: "present"
        update_cache: true 
      loop: '{{ packages}}'
    - name: Installing mysqlclient 
      pip: 
        executable: pip3 
        name: mysqlclient
        state: "present"

    - name: Starting MariaDB
      service:
        name: mariadb
        state: started
        enabled: yes  

    - name: Configuring firewalld for MariaDB 
      firewalld: 
        permanent: true
        zone: public
        port: 3306/tcp
        state: "enabled"
        immediate: true


- name: Configuring the Database
  hosts: dbserver
  become: yes 
  tasks:
    - name: Create the database
      mysql_db:
        name: ecomdb
        state: present

    # IP of the webserver which is gonna connect to the DB
    - name: Create the user
      mysql_user: 
        name: ecomuser
        password: "ecompassword"
        priv: '*.*:ALL'
        state: present
        host: 192.168.1.106

    - name: Copying the SQL script
      copy: 
        dest: "~/"
        src: "db-load-script.sql"

    # This allow to access to MariaDB from remote 
    - name: Adding settings to MariaDB configuration to enable remote access 
      become: true
      vars:
        lines: 
          - '[mysqld]'
          - 'skip-networking=0'
          - 'skip-bind-address'
      lineinfile:
        dest: /etc/mysql/my.cnf
        line: '{{ item }}'
      loop: '{{ lines }}'

    # for login_unix_socket as the doc says: The path to a Unix domain socket for local connections.
    # Use this parameter to avoid the Please explicitly state intended protocol error.
    - name: Executing the SQL script
      mysql_db:
        chdir: "~/"
        login_user: root
        name: ecomdb
        state: import
        target: "db-load-script.sql"
        login_unix_socket: "/run/mysqld/mysqld.sock"
  
- name: Installing the WEB server 
  hosts: webserver 
  become: yes
  vars: 
    packages: 
      - apache2
      - php 
      - php-mysql
      - git 

  tasks: 
    - name: Configuring firewalld for the WEB Server 
      firewalld: 
        permanent: true
        zone: public
        port: 80/tcp
        state: "enabled"
        immediate: true

    - name: installing the required packages for the Server
      apt: 
        name:  '{{ item }}'
        state: "present"
        update_cache: true
      loop: 
        - '{{ packages }}'

    - name: Starting the WEB server
      service: 
        name: apache2
        state: started
        enabled: yes

    - name: Replace index.html with index.php 
      replace:
        path: /etc/apache2/sites-available/000-default.conf
        regexp: 'index.html'
        replace: 'index.php'

    # We remove files in case they are already in the folder 
    - name: Removing files in the folder
      file:
        path: /var/www/html/*
        state: absent
        
    # force yes allow to override in case we modified the code locally 
    - name: Installing the code 
      git: 
        repo: "https://github.com/kodekloudhub/learning-app-ecommerce.git"
        dest: "/var/www/html/"
        clone: yes 
        force: yes

    - name: Updating the code 
      replace: 
        path: /var/www/html/index.php
        regexp: '172.20.1.101'
        # ip of the database server
        replace: '192.168.1.28'
      
